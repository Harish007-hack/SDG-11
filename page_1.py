from PyQt5 import QtCore, QtGui, QtWidgets
'''This is the learn Page
the below class uses Qwidget to create this window
'''

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(994, 656)
        MainWindow.setStyleSheet("* {\n"
"border:none;\n"
"\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setStyleSheet("background-color: rgb(24,24,36);")
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.side_menu_frame = QtWidgets.QFrame(self.centralwidget)
        self.side_menu_frame.setMaximumSize(QtCore.QSize(250, 16777215))
        self.side_menu_frame.setStyleSheet("background-color:rgb(9,5,13);\n"
"color:#fff;")
        self.side_menu_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.side_menu_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.side_menu_frame.setObjectName("side_menu_frame")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.side_menu_frame)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setSpacing(0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.side_menu = QtWidgets.QFrame(self.side_menu_frame)
        self.side_menu.setMinimumSize(QtCore.QSize(0, 0))
        self.side_menu.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.side_menu.setFrameShadow(QtWidgets.QFrame.Raised)
        self.side_menu.setObjectName("side_menu")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.side_menu)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.frame_7 = QtWidgets.QFrame(self.side_menu)
        self.frame_7.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_7.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_7.setObjectName("frame_7")
        self.horizontalLayout_10 = QtWidgets.QHBoxLayout(self.frame_7)
        self.horizontalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_10.setSpacing(0)
        self.horizontalLayout_10.setObjectName("horizontalLayout_10")
        self.label_2 = QtWidgets.QLabel(self.frame_7)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.label_2.setFont(font)
        self.label_2.setText("Sustain X")
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_10.addWidget(self.label_2, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.label_3 = QtWidgets.QPushButton(self.frame_7)
        self.label_3.setText("")
        self.label_3.setIcon(QtGui.QIcon((QtGui.QPixmap("logored.jpeg"))))
        self.label_3.setIconSize(QtCore.QSize(30,30))
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_10.addWidget(self.label_3, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.verticalLayout_3.addWidget(self.frame_7, 0, QtCore.Qt.AlignTop)
        self.frame_8 = QtWidgets.QFrame(self.side_menu)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_8.sizePolicy().hasHeightForWidth())
        self.frame_8.setSizePolicy(sizePolicy)
        self.frame_8.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_8.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_8.setObjectName("frame_8")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.frame_8)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(0)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.toolBox = QtWidgets.QToolBox(self.frame_8)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.toolBox.setFont(font)
        self.toolBox.setStyleSheet("QToolBox{\n"
"background-color:rgb(24,24,36);\n"
"text-align:left;\n"
"}\n"
"\n"
"QToolBox::tab{\n"
"border-radius:5px;\n"
"background-color:rgb(17,16,26);\n"
"text-align:left;\n"
"}")
        self.toolBox.setObjectName("toolBox")
        self.page = QtWidgets.QWidget()
        self.page.setGeometry(QtCore.QRect(0, 0, 232, 478))
        self.page.setObjectName("page")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.page)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.frame_10 = QtWidgets.QFrame(self.page)
        self.frame_10.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_10.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_10.setObjectName("frame_10")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame_10)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.pushButton_10 = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_10.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/alert-triangle.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_10.setIcon(icon)
        self.pushButton_10.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_10.setObjectName("pushButton_10")
        self.verticalLayout_6.addWidget(self.pushButton_10)
        self.pushButton_11 = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_11.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icons/bar-chart-2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_11.setIcon(icon1)
        self.pushButton_11.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_11.setObjectName("pushButton_11")
        self.verticalLayout_6.addWidget(self.pushButton_11)
        self.pushButton_12 = QtWidgets.QPushButton(self.frame_10)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_12.setFont(font)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icons/key.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_12.setIcon(icon2)
        self.pushButton_12.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_12.setObjectName("pushButton_12")
        self.verticalLayout_6.addWidget(self.pushButton_12)
        self.verticalLayout_5.addWidget(self.frame_10, 0, QtCore.Qt.AlignTop)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icons/chevron-down.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.toolBox.addItem(self.page, icon3, "")
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setGeometry(QtCore.QRect(0, 0, 232, 478))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.page_2.setFont(font)
        self.page_2.setObjectName("page_2")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.page_2)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame_11 = QtWidgets.QFrame(self.page_2)
        self.frame_11.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_11.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_11.setObjectName("frame_11")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.frame_11)
        self.verticalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_8.setSpacing(0)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.pushButton_13 = QtWidgets.QPushButton(self.frame_11)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_13.setFont(font)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icons/printer.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_13.setIcon(icon4)
        self.pushButton_13.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_13.setObjectName("pushButton_13")
        self.verticalLayout_8.addWidget(self.pushButton_13)
        self.pushButton_14 = QtWidgets.QPushButton(self.frame_11)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_14.setFont(font)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icons/phone-missed.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_14.setIcon(icon5)
        self.pushButton_14.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_14.setObjectName("pushButton_14")
        self.verticalLayout_8.addWidget(self.pushButton_14)
        self.verticalLayout_7.addWidget(self.frame_11, 0, QtCore.Qt.AlignTop)
        self.toolBox.addItem(self.page_2, icon3, "")
        self.verticalLayout_4.addWidget(self.toolBox)
        self.verticalLayout_3.addWidget(self.frame_8)
        self.frame_9 = QtWidgets.QFrame(self.side_menu)
        self.frame_9.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_9.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_9.setObjectName("frame_9")
        self.horizontalLayout_11 = QtWidgets.QHBoxLayout(self.frame_9)
        self.horizontalLayout_11.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_11.setSpacing(0)
        self.horizontalLayout_11.setObjectName("horizontalLayout_11")
        self.pushButton_9 = QtWidgets.QPushButton(self.frame_9)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.pushButton_9.setFont(font)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icons/external-link.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_9.setIcon(icon6)
        self.pushButton_9.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_9.setObjectName("pushButton_9")
        self.horizontalLayout_11.addWidget(self.pushButton_9, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignBottom)
        self.verticalLayout_3.addWidget(self.frame_9, 0, QtCore.Qt.AlignBottom)
        self.verticalLayout_2.addWidget(self.side_menu)
        self.horizontalLayout.addWidget(self.side_menu_frame)
        self.main_body = QtWidgets.QFrame(self.centralwidget)
        self.main_body.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.main_body.setFrameShadow(QtWidgets.QFrame.Raised)
        self.main_body.setObjectName("main_body")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.main_body)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.Main_body_frame = QtWidgets.QFrame(self.main_body)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Main_body_frame.sizePolicy().hasHeightForWidth())
        self.Main_body_frame.setSizePolicy(sizePolicy)
        self.Main_body_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.Main_body_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.Main_body_frame.setObjectName("Main_body_frame")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.Main_body_frame)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.header_frame = QtWidgets.QFrame(self.Main_body_frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.header_frame.sizePolicy().hasHeightForWidth())
        self.header_frame.setSizePolicy(sizePolicy)
        self.header_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.header_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.header_frame.setObjectName("header_frame")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.header_frame)
        self.horizontalLayout_2.setContentsMargins(6, 6, 6, 6)
        self.horizontalLayout_2.setSpacing(6)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.frame_6 = QtWidgets.QFrame(self.header_frame)
        self.frame_6.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_6.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_6.setObjectName("frame_6")
        self.horizontalLayout_9 = QtWidgets.QHBoxLayout(self.frame_6)
        self.horizontalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_9.setSpacing(0)
        self.horizontalLayout_9.setObjectName("horizontalLayout_9")
        self.pushButton_8 = QtWidgets.QPushButton(self.frame_6)
        self.pushButton_8.setText("")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icons/align-left.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_8.setIcon(icon7)
        self.pushButton_8.setIconSize(QtCore.QSize(32, 32))
        self.pushButton_8.setObjectName("pushButton_8")
        self.horizontalLayout_9.addWidget(self.pushButton_8, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.horizontalLayout_2.addWidget(self.frame_6, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.frame = QtWidgets.QFrame(self.header_frame)
        self.frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.frame)
        self.horizontalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_6.setSpacing(0)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.lineEdit = QtWidgets.QLineEdit(self.frame)
        self.lineEdit.setMinimumSize(QtCore.QSize(300, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("color:#fff;\n"
"border-bottom: 3px solid rgb(230,5,64);")
        self.lineEdit.setText("")
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout_6.addWidget(self.lineEdit)
        self.pushButton_6 = QtWidgets.QPushButton(self.frame)
        self.pushButton_6.setText("")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icons/search.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_6.setIcon(icon8)
        self.pushButton_6.setIconSize(QtCore.QSize(23, 23))
        self.pushButton_6.setObjectName("pushButton_6")
        self.horizontalLayout_6.addWidget(self.pushButton_6)
        self.horizontalLayout_2.addWidget(self.frame, 0, QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.frame_2 = QtWidgets.QFrame(self.header_frame)
        self.frame_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.pushButton_4 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_4.setMaximumSize(QtCore.QSize(50, 30))
        self.pushButton_4.setText("")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icons/user.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon9)
        self.pushButton_4.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_4.setObjectName("pushButton_4")
        self.horizontalLayout_5.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.frame_2)
        self.pushButton_5.setMaximumSize(QtCore.QSize(50, 30))
        self.pushButton_5.setText("")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icons/bell.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon10)
        self.pushButton_5.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_5.setObjectName("pushButton_5")
        self.horizontalLayout_5.addWidget(self.pushButton_5)
        self.horizontalLayout_2.addWidget(self.frame_2, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.frame_3 = QtWidgets.QFrame(self.header_frame)
        self.frame_3.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_4.setSpacing(10)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.pushButton = QtWidgets.QPushButton(self.frame_3)
        self.pushButton.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton.setText("")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icons/arrow-down-left.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton.setIcon(icon11)
        self.pushButton.setIconSize(QtCore.QSize(20, 20))
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout_4.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_2.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_2.setText("")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icons/maximize-2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon12)
        self.pushButton_2.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_4.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.frame_3)
        self.pushButton_3.setMaximumSize(QtCore.QSize(30, 30))
        self.pushButton_3.setText("")
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icons/x.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon13)
        self.pushButton_3.setIconSize(QtCore.QSize(20, 20))
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_4.addWidget(self.pushButton_3)
        self.horizontalLayout_2.addWidget(self.frame_3, 0, QtCore.Qt.AlignRight|QtCore.Qt.AlignTop)
        self.verticalLayout_9.addWidget(self.header_frame)
        self.verticalLayout.addWidget(self.Main_body_frame)
        self.frame_12 = QtWidgets.QFrame(self.main_body)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_12.sizePolicy().hasHeightForWidth())
        self.frame_12.setSizePolicy(sizePolicy)
        self.frame_12.setMinimumSize(QtCore.QSize(0, 554))
        self.frame_12.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.frame_12.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_12.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_12.setObjectName("frame_12")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.frame_12)
        self.verticalLayout_10.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_10.setSpacing(0)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.frame_13 = QtWidgets.QFrame(self.frame_12)
        self.frame_13.setMinimumSize(QtCore.QSize(0, 1200))
        self.frame_13.setMaximumSize(QtCore.QSize(16777215, 1200))
        self.frame_13.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_13.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_13.setObjectName("frame_13")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.frame_13)
        self.verticalLayout_12.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_12.setSpacing(0)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_4 = QtWidgets.QLabel(self.frame_13)
        self.label_4.setMinimumSize(QtCore.QSize(450, 10))
        self.label_4.setMaximumSize(QtCore.QSize(450, 50))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color:#fff;")
        self.label_4.setObjectName("label_4")
        self.verticalLayout_12.addWidget(self.label_4, 0, QtCore.Qt.AlignHCenter)
        self.frame_14 = QtWidgets.QFrame(self.frame_13)
        self.frame_14.setMaximumSize(QtCore.QSize(16777215, 2000))
        self.frame_14.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_14.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_14.setObjectName("frame_14")
        self.frame_14.setStyleSheet('background:white;')
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.frame_14)
        self.verticalLayout_13.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_13.setSpacing(0)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.textBrowser = QtWidgets.QTextBrowser(self.frame_14)
        self.textBrowser.setMaximumSize(QtCore.QSize(16777215, 2000))
        font = QtGui.QFont()
        font.setPointSize(20)
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("QScrollBar {\n"
"border:none;\n"
"background-color: #fff;\n"
"width:14px;\n"
"\n"
"border-radius: 7px;\n"
"}\n"
"\n"
"QScrollBar::handle {\n"
"background-color: rgb(80,80,122);\n"
"min-height : 30px;\n"
"margin:15px 0 15px 0;\n"
"border-radius:7px;\n"
"}\n"
"\n"
"QScrollBar::handle:hover {\n"
"background-color:rgb(255, 19, 62);\n"
"}\n"
"\n"
"QScrollBar::sub-line {\n"
"border:none;\n"
"background-color:rgb(59,59,90);\n"
"height:15px;\n"
"border-top-left-radius:7px;\n"
"border-top-right-radius:7px;\n"
"subcontrol-position:top;\n"
"subcontrol-orgin: margin;\n"
"}\n"
"\n"
"QScrollBar::sub-line:hover{\n"
"background-color:rgb(225,0,127);\n"
"}\n"
"\n"
"QScrollBar::add-line{\n"
"border:none;\n"
"background-color:rgb(59,59,90);\n"
"height:15px;\n"
"border-bottom-left-radius:7px;\n"
"border-bottom-right-radius:7px;\n"
"subcontrol-position:bottom;\n"
"subcontrol-orgin: margin;\n"
"}")
        self.textBrowser.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_13.addWidget(self.textBrowser)
        self.verticalLayout_12.addWidget(self.frame_14)
        self.verticalLayout_10.addWidget(self.frame_13)
        self.verticalLayout.addWidget(self.frame_12)
        self.footer_frame = QtWidgets.QFrame(self.main_body)
        self.footer_frame.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.footer_frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.footer_frame.setObjectName("footer_frame")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.footer_frame)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setSpacing(0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.frame_4 = QtWidgets.QFrame(self.footer_frame)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.frame_4.setFont(font)
        self.frame_4.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout_8.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_8.setSpacing(0)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.label = QtWidgets.QLabel(self.frame_4)
        font = QtGui.QFont()
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setStyleSheet("color:#fff;")
        self.label.setObjectName("label")
        self.horizontalLayout_8.addWidget(self.label, 0, QtCore.Qt.AlignBottom)
        self.horizontalLayout_3.addWidget(self.frame_4)
        self.frame_5 = QtWidgets.QFrame(self.footer_frame)
        self.frame_5.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_5.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_5.setObjectName("frame_5")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.frame_5)
        self.horizontalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_7.setSpacing(0)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.pushButton_7 = QtWidgets.QPushButton(self.frame_5)
        self.pushButton_7.setMinimumSize(QtCore.QSize(0, 40))
        self.pushButton_7.setMaximumSize(QtCore.QSize(16777215, 50))
        self.pushButton_7.setText("")
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icons/box.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_7.setIcon(icon14)
        self.pushButton_7.setIconSize(QtCore.QSize(18, 18))
        self.pushButton_7.setObjectName("pushButton_7")
        self.horizontalLayout_7.addWidget(self.pushButton_7, 0, QtCore.Qt.AlignBottom)
        self.horizontalLayout_3.addWidget(self.frame_5)
        self.siz_grip = QtWidgets.QFrame(self.footer_frame)
        self.siz_grip.setMinimumSize(QtCore.QSize(10, 10))
        self.siz_grip.setMaximumSize(QtCore.QSize(10, 10))
        self.siz_grip.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.siz_grip.setFrameShadow(QtWidgets.QFrame.Raised)
        self.siz_grip.setObjectName("siz_grip")
        self.horizontalLayout_3.addWidget(self.siz_grip, 0, QtCore.Qt.AlignRight|QtCore.Qt.AlignBottom)
        self.verticalLayout.addWidget(self.footer_frame, 0, QtCore.Qt.AlignBottom)
        self.horizontalLayout.addWidget(self.main_body)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.toolBox.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_2.setText(_translate("MainWindow", "APP NAME"))
        self.pushButton_10.setText(_translate("MainWindow", "ITEM 1"))
        self.pushButton_11.setText(_translate("MainWindow", "ITEM 2"))
        self.pushButton_12.setText(_translate("MainWindow", "ITEM  3"))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page), _translate("MainWindow", "DROP MENU 1"))
        self.pushButton_13.setText(_translate("MainWindow", "SUB MENU"))
        self.pushButton_14.setText(_translate("MainWindow", "SUB MENU "))
        self.toolBox.setItemText(self.toolBox.indexOf(self.page_2), _translate("MainWindow", "DROP MENU 2"))
        self.pushButton_9.setText(_translate("MainWindow", "Exit"))
        self.lineEdit.setPlaceholderText(_translate("MainWindow", "Search"))
        self.label_4.setText(_translate("MainWindow", "Sustainable Development Goal 11 "))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:20pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:9pt;\"><br /></p>\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-weight:700;\">What is Sustainable Goal 11 ?<br /></span>Sustainable Development Goal 11 , titled sustainable cities and communities, is one of 17 Sustainable Development Goals established by the United Nations General Assembly in 2015.<br /> The official mission of SDG 11 is to &quot;Make cities inclusive, safe, resilient and sustainable.<br /><br /> The 17 SDGs take into account that action in one area will affect outcomes in other areas as well, and that development must balance social, economic and environmental sustainability.<br /><br />Sustainable Development Goal 11 is divided into 10 targets and 14 indicators at the global level. The seven outcome targets are :<br />11.1 – Adequate, safe, and affordable housing and basic services and upgrade slums<br />11.2 – Safe, affordable, accessible, and sustainable transport systems<br />11.3 – Enhance inclusive and sustainable urbanization and capacity for participatory, integrated and sustainable human settlement planning and management in all countries<br />11.4 – Strengthen efforts to protect and safeguard the world’s cultural and natural heritage<br />11.5 – Reduce the number of deaths and the number of people affected by disasters and decrease the direct economic losses relative to global gross domestic product caused by disasters<br />11.6 – Reduce the adverse per capita environmental impact of cities, including by paying special attention to air quality and municipal and other waste management<br />11.7 – Provide universal access to safe, inclusive and accessible, green and public spaces<br /><br /><br />The three means of achieving targets are:<br />11.a – Support positive economic, social and environmental links between urban, peri-urban and rural areas by strengthening national and regional development planning<br />11.b – Increase the number of cities and human settlements adopting and implementing integrated policies and plans towards inclusion, resource efficiency, mitigation and adaptation to climate change, resilience to disasters, and develop and implement, in line with the Sendai Framework for Disaster Risk Reduction 2015–2030, holistic disaster risk managements at all levels<br />11.c – Support least developed countries, including through financial and technical assistance, in building sustainable and resilient buildings utilizing local materials<br /><br />SDG 11 has 10 targets to be achieved, and this is being measured with 15 indicators. The seven outcome targets include safe and affordable housing, affordable and sustainable transport systems, inclusive and sustainable urbanization, protection of the world\'s cultural and natural heritage, reduction of the adverse effects of natural disasters, reduction of the environmental impacts of cities and to provide access to safe and inclusive green and public spaces. <br /><br />Target 11.1: Safe and affordable housing<br /><br />The full title of Target 11.1 is By 2030, ensure access for all to adequate, safe and affordable housing and basic services and upgrade slums.<br /><br />This target has one Indicator: Indicator 11.1.1 is the Proportion of the urban population living in slum households.<br /><br />People who live in slums have no access to improved water, access to improved sanitation, sufficient living area, and durable housing.<br /><br />Target 11.1 is to ensure access to safe and affordable housing by 2030. The indicator to measure progress toward this target is the proportion of urban population living in slums or informal settlements. Between 2000 and 2014, the proportion fell from 39 percent to 30 percent. However, the absolute number of people living in slums went from 792 million in 2000 to an estimated 880 million in 2014. Movement from rural to urban areas has accelerated as the population has grown and better housing alternatives are available.<br /><br />A sustainable transportation system considers different socioeconomic groups travel concerns to achieve the validity of accessibility metrics. According to the Bogota research, transportation and transportation planning should be coordinated with land use planning. Employment and residential areas are relatively concentrated, and urban and suburban settings should be planned and reconstructed in concert.<br /><br /><br />Target 11.2: Affordable and sustainable transport systems<br />The full text of Target 11.2 is By 2030, provide access to safe, affordable, accessible and sustainable transport systems for all, improving road safety, notably by expanding public transport, with special attention to the needs of those in vulnerable situations, women, children, persons with disabilities and older persons.<br /><br />This target has one Indicator: Indicator 11.2.1 is the Proportion of population that has convenient access to public transport, by sex, age and Persons With Disabilities.Improving transport systems to refine the use of accessibility is key because due to physical or mental disabilities, impaired sight or hearing, carrying heavy bags or traveling with small children, as this causes an average of 25% of the population to experience a degree of reduced mobility.<br /><br />One of the main issues that arises in providing access to transport systems for all has been in many urban areas lacking coordination between local authorities and public transport operators.<br /><br />Target 11.3: Inclusive and sustainable urbanization<br /><br />The full-text Target 11.3 is By 2030, enhance inclusive and sustainable urbanization and capacity for participatory, integrated and sustainable human settlement planning and management in all countries.The target has two indicators:<br /><br />Indicator 11.3.1: Ratio of land consumption rate to the population growth rate<br />Over long periods of time according to a variety of environmental, political, and social conditions land-use practices are developed. Land being used for infrastructural and developmental activities can differ due to the demand for resources and socioeconomic factors. Managing the ratio of land consumption rate to the population growth rate is vital because of the effects of urban sprawl which occurs when there is a migration of population to new regions In such cases agricultural and vacant land becomes occupied as the population grows which occasionally leads to the conversion of agricultural land to urban settlements, deforestation, or rural areas converting to urban areas.Therefore, creating a greater method to sustainable urbanization and managing human settlements is significant with population growth.<br /><br />Indicator 11.3.2: Proportion of cities with a direct participation structure of civil society in urban planning and management that operate regularly and democratically<br /><br />Indicator 11.3.2 may be challenging to calculate as direct participation in accordance with urban planning requires the implication that constructive relations are practiced with countries or city administrators. However, only 20 out of 211 countries have a direct democracy  which implies that citizens through their representatives are tasked with co-designing policies to be discussed in public and later voted on by the public.<br /><br />Target 11.4: &quot;Protect the world\'s cultural and natural heritage&quot;.<br /><br />The full text of Target 11.4 is &quot;Strengthen efforts to protect and safeguard the world\'s cultural and natural heritage.&quot;.<br /><br />.<br /><br />It has one indicator: Indicator 11.4.1 is the &quot;Total per capita expenditure on the preservation, protection and conservation of all cultural and natural heritage, by the source of funding (public, private), type of heritage (cultural, natural) and level of government (national, regional, and local/municipal)&quot;..<br /><br />Urban spaces should add efforts in preserving cultural and natural heritage as it can bring pride to a community and may be used to capitalize on the heritage or used as a marketing tool.The use of urban archaeology may be an option to explore to strengthen cultural heritage. Material culture, artifacts, building foundations, food remains, gardens, pathways and bridges can be further studied by urban archeologists to understand the history and diversity which lives in the urban space.<br /><br />This indicator can be difficult to calculate for the following reasons: Countries\' national accounting frameworks may not clearly separate cultural, natural, and other activities; financial transactions may be rechanneled for different uses; financial transactions may be double-counted at different levels of public administration.<br /><br />Target 11.5: &quot;Reduce the adverse effects of natural disasters&quot;<br /><br />In 2017: &quot;Death rate from natural disasters&quot;<br /><br />The Direct disaster economic loss as a share of GDP, 2018<br /><br />the Global economic losses from disasters as a share of GDPThe full text of Target 11.5 is &quot;By 2030, significantly reduce the number of deaths and the number of people affected and substantially decrease the direct economic losses relative to global gross domestic product caused by disasters, including water-related disasters, with a focus on protecting the poor and people in vulnerable situations&quot;.<br /><br />Indicators are:<br />Indicator 11.5.1: &quot;Number of deaths, missing persons and directly affected persons attributed to disasters per 100,000 population. Indicators measured here report mortality rates internally displaced persons, missing persons and total numbers affected by natural disasters&quot;<br /><br />Indicator 11.5.2: &quot;Direct economic loss in relation to global GDP, damage to critical infrastructure and the number of disruptions to basic services, attributed to disasters.&quot;<br /><br />According to a recent report released by Aon, at least 416 notable natural disaster events occurred on a regional, peril, or event-level scale in addition to pandemic-related events in 2020, which was higher than the average (384) and median (390) since 2000. The estimated direct economic losses and damages caused by these natural disasters were about US$268 billion, which was higher than the average of the 21st century by 29%.<br />The Emergency Events Database (EM-DAT) records show from 1970 to 2019, 50% of all disasters were weather, climate, and water hazards, and these disasters were accountable for 45% of all reported deaths (2.06 million), 74% of all reported economic losses (US$3.6 trillion).<br /><br />In addition, continued climate change, and global warming would likely increase both the frequency and intensity of weather-, climate-related hazards, like floods, hurricanes, storms and lead to tremendous economic loss and deaths. Around 32 – 79 million people will be exposed to coastal flooding If the global temperature increases by 2°C.<br /><br />Target 11.6: &quot;Reduce the environmental impacts of cities&quot;<br /><br />In 2017: &quot;Internally displaced persons from natural disasters&quot;<br /><br />The Proportion of Population served by municipal waste collection, 2017<br />The full text of Target 11.6 is &quot;By 2030, reduce the adverse per capita environmental impact of cities, including by paying special attention to air quality and municipal and other waste management.&quot;<br /><br />The target has two indicators:<br /><br />Indicator 11.6.1: Proportion of municipal solid waste collected and managed in controlled facilities out of total municipal waste generated, by citiesThe use of “zero waste” cities can be useful to implement within cities as it suggests the concept of recycling 100% of waste to mitigate the harmful waste produced by the city.As waste management systems are political, environmental, socio-economic, and technological, there may be challenges faced achieving indicator 11.6.1 as these factors create interrelated and dynamic inherited features.As waste management systems are political, environmental, socio-economic, and technological, there may be challenges faced achieving indicator 11.6.1 as these factors create interrelated and dynamic inherited features.<br /><br />Indicator 11.6.2: &quot;Annual mean levels of fine particulate matter (e.g. PM2.5 and PM10) in cities (population weighted)&quot;Particulate matter (PM) in the air can affect the cardiovascular system and other major organs. Chronic exposure will lead to further health risks<br /><br />Target 11.7: &quot;Provide access to safe and inclusive green and public spaces&quot;<br />The full text of Target 11.7 is: &quot;By 2030, provide universal access to safe, inclusive and accessible, green and public spaces, in particular for women and children, older persons and Persons With Disabilities&quot;<br /><br />The two indicators include:<br /><br />The Indicator 11.7.1: &quot;Average share of the built-up area of cities that is open space for public use for all, by sex, age and persons with disabilities&quot;<br /><br />The Indicator 11.7.2: &quot;Proportion of person victim of physical or sexual harassment, by sex, age, disability status and place of occurrence, in the previous 12 months&quot;.University campuses are found to have great potential to contribute to urban green areas development. Green spaces play an important role in improving quality of life and reducing stress and improving overall well-being, they have increasingly become an integrated part of the university campus.<br /><br />Universities also are widely recognized as a key driver of sustainability practices promotion, research, personal involvement, achievement of SDG goals through educational establishment.<br /><br /><span style=\" font-weight:700;\">Importance of Sustainable Development Goal 11</span><br /><br />A vision for cities has never been more important than it is today. More than half of the world’s inhabitants live in cities and this migration trend is expected to continue. By 2050 more than two-thirds of the world will be urban dwellers. India alone is expected to double the number of city dwellers by adding 404 million new people to cities over the next 35 years.1<br /><br />Therefore, it will be under the auspices of cities where we will succeed or fail in achieving our goals of poverty eradication, equality, climate change reduction, and ensuring healthy lives. It will be the cities that determine if we achieve inclusive economic growth or yield to greater inequality. It is in cities where people will seek opportunities for higher education and employment. And, it will be cities that determine if we will continue our steadily increasing usage of the world’s resources or if we can realize a more sustainable path. This is why sustainable development goal (SDG) 11, “Make cities and human settlements inclusive, safe, resilient and sustainable”, is so important. Success in achieving the targets under SDG 11 sets the stage for achieving targets in many of the other SDG goals. We can examine just two of the targets as an example.<br /><br />Target 11.2: By 2030, provide access to safe, affordable, accessible and sustainable transport systems for all, improving road safety, notably by expanding public transport, with special attention to the needs of those in vulnerable situations, women, children, persons with disabilities and older persons.<br /><br />Transportation is a key development issue and target 11.2 is important to achieve safe, resilient and sustainable cities. However, achieving target 11.2 will also be necessary if we are to address some of the targets in SDG 3 (Ensure healthy lives) including reducing non-communicable diseases (NCDs). Active transport can help achieve the NCD target by providing safe, comfortable, and attractive places to walk and cycle. City dwellers can walk or cycle to destinations in order to achieve the necessary physical activity that reduces their risk of NCDs. Walking and cycling are both affordable and accessible ways for the vulnerable, including women and the poor, to move about cities. In addition, active transport can contribute to achieving the target of halving the number of global deaths and injuries from road traffic collisions. Fully 65 per cent of the 1.2 million deaths that occur each year worldwide due to road accidents involve pedestrians; 35 per cent of those deaths are children. Providing safe spaces for pedestrians will therefore significantly reduce this number.2<br /><br />While the benefits to health are obvious, sustainable means of transportation will also determine how easy it is to access other key services in the city, such as education and employment, and is therefore connected indirectly to SDG 1 (Eradicate poverty) and SDG 4 (Ensure inclusive and equitable quality education). Finally, efficient transportation systems can support SDG 5 (Gender equality) by ensuring that they meet the unique needs of women. Unfortunately, the transportation systems in cities are often built to address the needs of men with little consideration of the needs of women. When compared to men, women move about cities at different times, for different reasons, in different ways, and have fewer financial resources; they are less able to afford many of the transportation options available to them.3 A well-designed transportation system that supports walking, cycling and public transit use will allow all people to fully participate in community life and creates safer, cleaner, healthier, and more social places.<br /></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /><br /></p></body></html>"))
        self.label.setText(_translate("MainWindow", "Mordern UI V 7.7.7"))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
